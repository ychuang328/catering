<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- AUTH: zhangpengfei@vko.cn -->
<mapper namespace="com.weiwork.catering.mapper.IOrdersMapper">

<!-- 所有字段 -->
	<sql id="Base_Column_List">
	id  
	,storeId 
	,orderNo 
	,status 
	,userId 
	,amount 
	,tradeNo 
	,payTime 
	,accountId 
	,createTime 
	,remark 
	</sql>
	
<!-- 字段映射 -->
	<resultMap id="BaseResultMap" type="com.weiwork.catering.model.Orders">
	     <id column="id" property="id" jdbcType="BIGINT" />
		<result column="storeId" jdbcType="BIGINT" property="storeId" />
		<result column="orderNo" jdbcType="VARCHAR" property="orderNo" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="userId" jdbcType="BIGINT" property="userId" />
		<result column="amount" jdbcType="VARCHAR" property="amount" />
		<result column="tradeNo" jdbcType="VARCHAR" property="tradeNo" />
		<result column="payTime" jdbcType="TIMESTAMP" property="payTime" />
		<result column="accountId" jdbcType="VARCHAR" property="accountId" />
		<result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
	</resultMap>

<!-- 主键查询 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
		select  <include refid="Base_Column_List" />
		from orders
		where id = #{id,jdbcType=BIGINT}
	</select>



<!-- 删除 -->	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orders where id = #{id,jdbcType=BIGINT}
    </delete>
	
<!-- 批量删除  慎用
	<delete id="deleteByPrimaryKeyBatch" parameterType="array" >
     delete from orders where id in 
		 <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
				#{item}   
		</foreach> 
    </delete>
-->		
<!-- 通用查询条件 只能用来查询，不要用于删改 -->
	<sql id="sql_of_where">
		WHERE 1=1 
		<if test="bParam != null" >
			<if test="bParam.id != null"> AND id = #{bParam.id,jdbcType=BIGINT} </if>
			<if test="bParam.storeId != null"> AND storeId = #{bParam.storeId,jdbcType=BIGINT} </if>
			<if test="bParam.orderNo != null"> AND orderNo = #{bParam.orderNo,jdbcType=VARCHAR} </if>
			<if test="bParam.status != null"> AND status = #{bParam.status,jdbcType=INTEGER} </if>
			<if test="bParam.userId != null"> AND userId = #{bParam.userId,jdbcType=BIGINT} </if>
			<if test="bParam.amount != null"> AND amount = #{bParam.amount,jdbcType=VARCHAR} </if>
			<if test="bParam.tradeNo != null"> AND tradeNo = #{bParam.tradeNo,jdbcType=VARCHAR} </if>
			<if test="bParam.payTime != null"> AND payTime = #{bParam.payTime,jdbcType=TIMESTAMP} </if>
			<if test="bParam.accountId != null"> AND accountId = #{bParam.accountId,jdbcType=VARCHAR} </if>
			<if test="bParam.createTime != null"> AND createTime = #{bParam.createTime,jdbcType=TIMESTAMP} </if>
			<if test="bParam.remark != null"> AND remark = #{bParam.remark,jdbcType=VARCHAR} </if>
		</if>
	</sql>
	
<!-- 通用分页查询 -->
	<select id="queryByParamMap" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from orders
		<include refid="sql_of_where" />
		<if test="pParam != null">
			<if test="pParam.orderByClause != null" > order by ${pParam.orderByClause} </if>
			<if test="pParam.startIndex != null and pParam.pageSize != null" >
			  limit #{pParam.startIndex} , #{pParam.pageSize}
			</if>
		</if>
	</select>
	
<!-- 通用分页查询记录总数 -->
	<select id="countByParamMap" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(id) from orders
		<include refid="sql_of_where" />
	</select>
	
<!-- 插入 -->
	<insert id="insert" parameterType="com.weiwork.catering.model.Orders">
		insert into orders 
		<trim prefix="(" suffix=")" suffixOverrides=",">
				id, 
			<if test="storeId != null">
			    storeId,
			</if>
			<if test="orderNo != null">
			    orderNo,
			</if>
			<if test="status != null">
			    status,
			</if>
			<if test="userId != null">
			    userId,
			</if>
			<if test="amount != null">
			    amount,
			</if>
			<if test="tradeNo != null">
			    tradeNo,
			</if>
			<if test="payTime != null">
			    payTime,
			</if>
			<if test="accountId != null">
			    accountId,
			</if>
			<if test="createTime != null">
			    createTime,
			</if>
			<if test="remark != null">
			    remark,
			</if> 
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			     #{id,jdbcType=BIGINT}, 
			<if test="storeId != null">
			    #{storeId,jdbcType=BIGINT},
			</if>
			<if test="orderNo != null">
			    #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
			    #{status,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
			    #{userId,jdbcType=BIGINT},
			</if>
			<if test="amount != null">
			    #{amount,jdbcType=VARCHAR},
			</if>
			<if test="tradeNo != null">
			    #{tradeNo,jdbcType=VARCHAR},
			</if>
			<if test="payTime != null">
			    #{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="accountId != null">
			    #{accountId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
			    #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
			    #{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
<!-- 批量插入 请根据业务修改默认值-->	
    <insert id="insertBatch"  parameterType="java.util.List">
		insert into orders 
		( <include refid="Base_Column_List" /> ) 
		values
		<foreach collection="list" item="item" separator=",">
		(#{item.id,jdbcType=BIGINT}  
			<choose>  
				<when test="item.storeId != null">,#{item.storeId ,jdbcType=BIGINT}</when>
				<otherwise>,0</otherwise>
			</choose>
			<choose>  
				<when test="item.orderNo != null">,#{item.orderNo ,jdbcType=VARCHAR}</when>
				<otherwise>,''</otherwise>
			</choose>
			<choose>  
				<when test="item.status != null">,#{item.status ,jdbcType=INTEGER}</when>
				<otherwise>,0</otherwise>
			</choose>
			<choose>  
				<when test="item.userId != null">,#{item.userId ,jdbcType=BIGINT}</when>
				<otherwise>,0</otherwise>
			</choose>
			<choose>  
				<when test="item.amount != null">,#{item.amount ,jdbcType=VARCHAR}</when>
				<otherwise>,''</otherwise>
			</choose>
			<choose>  
				<when test="item.tradeNo != null">,#{item.tradeNo ,jdbcType=VARCHAR}</when>
				<otherwise>,''</otherwise>
			</choose>
			<choose>  
				<when test="item.payTime != null">,#{item.payTime ,jdbcType=TIMESTAMP}</when>
				<otherwise>,0</otherwise>
			</choose>
			<choose>  
				<when test="item.accountId != null">,#{item.accountId ,jdbcType=VARCHAR}</when>
				<otherwise>,''</otherwise>
			</choose>
			<choose>  
				<when test="item.createTime != null">,#{item.createTime ,jdbcType=TIMESTAMP}</when>
				<otherwise>,0</otherwise>
			</choose>
			<choose>  
				<when test="item.remark != null">,#{item.remark ,jdbcType=VARCHAR}</when>
				<otherwise>,''</otherwise>
			</choose> 
		)
		</foreach>
	</insert>

<!-- 更新 -->
	<update id="updateByPrimaryKey" parameterType="com.weiwork.catering.model.Orders">
		update orders
		<set>
			<if test="storeId != null" >
             storeId = #{storeId,jdbcType=BIGINT},
            </if>
			<if test="orderNo != null" >
             orderNo = #{orderNo,jdbcType=VARCHAR},
            </if>
			<if test="status != null" >
             status = #{status,jdbcType=INTEGER},
            </if>
			<if test="userId != null" >
             userId = #{userId,jdbcType=BIGINT},
            </if>
			<if test="amount != null" >
             amount = #{amount,jdbcType=VARCHAR},
            </if>
			<if test="tradeNo != null" >
             tradeNo = #{tradeNo,jdbcType=VARCHAR},
            </if>
			<if test="payTime != null" >
             payTime = #{payTime,jdbcType=TIMESTAMP},
            </if>
			<if test="accountId != null" >
             accountId = #{accountId,jdbcType=VARCHAR},
            </if>
			<if test="createTime != null" >
             createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
			<if test="remark != null" >
             remark = #{remark,jdbcType=VARCHAR},
            </if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
<!-- 批量更新 -->
	<update id="updateBatchByPrimaryKey"  parameterType="java.util.List">
	     <foreach collection="list" item="item" index="index" open="" close="" separator=";">
                update orders 
                <set>
                  <if test="item.storeId != null" >
                    storeId = #{item.storeId,jdbcType=BIGINT},
                  </if>
                  <if test="item.orderNo != null" >
                    orderNo = #{item.orderNo,jdbcType=VARCHAR},
                  </if>
                  <if test="item.status != null" >
                    status = #{item.status,jdbcType=INTEGER},
                  </if>
                  <if test="item.userId != null" >
                    userId = #{item.userId,jdbcType=BIGINT},
                  </if>
                  <if test="item.amount != null" >
                    amount = #{item.amount,jdbcType=VARCHAR},
                  </if>
                  <if test="item.tradeNo != null" >
                    tradeNo = #{item.tradeNo,jdbcType=VARCHAR},
                  </if>
                  <if test="item.payTime != null" >
                    payTime = #{item.payTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="item.accountId != null" >
                    accountId = #{item.accountId,jdbcType=VARCHAR},
                  </if>
                  <if test="item.createTime != null" >
                    createTime = #{item.createTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="item.remark != null" >
                    remark = #{item.remark,jdbcType=VARCHAR},
                  </if>
                </set>
                where id = #{item.id,jdbcType=BIGINT}
         </foreach>
	</update>
</mapper>